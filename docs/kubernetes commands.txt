installed software:
------------------
    scoop
    choco
    wget
    curl
    kubectl
    kubernetes-cli
    kind


kubectl:
--------
	kubectl controls the Kubernetes cluster manager.

	 Find more information at: https://kubernetes.io/docs/reference/kubectl/
	 
	 kuberctl version --client
		checks the version of installed
		
	kubectl get pods --namespace kube-system
		gets the pods present inside the kube-system namespace

	Basic Commands (Beginner):
	  create          Create a resource from a file or from stdin
	  expose          Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service
	  run             Run a particular image on the cluster
	  set             Set specific features on objects

	Basic Commands (Intermediate):
	  explain         Get documentation for a resource
	  get             Display one or many resources eg. pods, nodes, namespaces
	  edit            Edit a resource on the server
	  delete          Delete resources by file names, stdin, resources and names, or by resources and label selector

	Deploy Commands:
	  rollout         Manage the rollout of a resource
	  scale           Set a new size for a deployment, replica set, or replication controller
	  autoscale       Auto-scale a deployment, replica set, stateful set, or replication controller

	Cluster Management Commands:
	  certificate     Modify certificate resources
	  cluster-info    Display cluster information
	  top             Display resource (CPU/memory) usage
	  cordon          Mark node as unschedulable
	  uncordon        Mark node as schedulable
	  drain           Drain node in preparation for maintenance
	  taint           Update the taints on one or more nodes

	Troubleshooting and Debugging Commands:
	  describe        Show details of a specific resource or group of resources
	  logs            Print the logs for a container in a pod
	  attach          Attach to a running container
	  exec            Execute a command in a container
	  port-forward    Forward one or more local ports to a pod
	  proxy           Run a proxy to the Kubernetes API server
	  cp              Copy files and directories to and from containers
	  auth            Inspect authorization
	  debug           Create debugging sessions for troubleshooting workloads and nodes
	  events          List events

	Advanced Commands:
	  diff            Diff the live version against a would-be applied version
	  apply           Apply a configuration to a resource by file name or stdin
	  patch           Update fields of a resource
	  replace         Replace a resource by file name or stdin
	  wait            Experimental: Wait for a specific condition on one or many resources
	  kustomize       Build a kustomization target from a directory or URL

	Settings Commands:
	  label           Update the labels on a resource
	  annotate        Update the annotations on a resource
	  completion      Output shell completion code for the specified shell (bash, zsh, fish, or powershell)

	Subcommands provided by plugins:
	  convert.exe   The command convert.exe is a plugin installed by the user

	Other Commands:
	  api-resources   Print the supported API resources on the server
	  api-versions    Print the supported API versions on the server, in the form of "group/version"
	  config          Modify kubeconfig files
	  plugin          Provides utilities for interacting with plugins
	  version         Print the client and server version information

	Usage:
	  kubectl [flags] [options]

	Use "kubectl <command> --help" for more information about a given command.
	Use "kubectl options" for a list of global command-line options (applies to all commands).

powershell:
-----------
    k alias for kubectl
    m alias for minikube
    d alias for docker
    
	cd ~
	cd $home
	cd $env:userprofile
		navigate to user profile directory i.e. c:/users/makof

minikube:
---------
	minikube start
		creates and starts the kubernetes cluster

	minukube start      	
	minikube start --driver=hyperv	
	minikube start --driver=docker
		Starts a local Kubernetes cluster

	minukube status
		Gets the status of a local Kubernetes cluster
		
	minukube stop             
		Stops a running local Kubernetes cluster
		
	minukube delete  
		Deletes a local Kubernetes cluster
		
	minukube dashboard  
		Access the Kubernetes dashboard running within the minikube cluster
		
	minukube pause  
		pause Kubernetes
		
	minukube unpause    
		unpause Kubernetes
		
	minikube ip
		gets the ip of the cluster
		
	ssh docker@[ip address from previous step]
		username: docker
		password: tcuser
			this didnt work for me so i use minikube ssh
	
	minikube ssh
		access to shell inside the cluster node
			
		
docker:
-------
	docker context use default
		set the current context as default
		
	A self-sufficient runtime for containers

	Common Commands:
	  run         Create and run a new container from an image
	  exec        Execute a command in a running container
	  ps          List containers
	  build       Build an image from a Dockerfile
	  pull        Download an image from a registry
	  push        Upload an image to a registry
	  images      List images
	  login       Authenticate to a registry
	  logout      Log out from a registry
	  search      Search Docker Hub for images
	  version     Show the Docker version information
	  info        Display system-wide information

	Management Commands:
	  builder     Manage builds
	  buildx*     Docker Buildx
	  container   Manage containers
	  context     Manage contexts
	  image       Manage images
	  manifest    Manage Docker image manifests and manifest lists
	  network     Manage networks
	  plugin      Manage plugins
	  system      Manage Docker
	  trust       Manage trust on Docker images
	  volume      Manage volumes

	Swarm Commands:
	  swarm       Manage Swarm

	Commands:
	  attach      Attach local standard input, output, and error streams to a running container
	  commit      Create a new image from a container's changes
	  cp          Copy files/folders between a container and the local filesystem
	  create      Create a new container
	  diff        Inspect changes to files or directories on a container's filesystem
	  events      Get real time events from the server
	  export      Export a container's filesystem as a tar archive
	  history     Show the history of an image
	  import      Import the contents from a tarball to create a filesystem image
	  inspect     Return low-level information on Docker objects
	  kill        Kill one or more running containers
	  load        Load an image from a tar archive or STDIN
	  logs        Fetch the logs of a container
	  pause       Pause all processes within one or more containers
	  port        List port mappings or a specific mapping for the container
	  rename      Rename a container
	  restart     Restart one or more containers
	  rm          Remove one or more containers
	  rmi         Remove one or more images
	  save        Save one or more images to a tar archive (streamed to STDOUT by default)
	  start       Start one or more stopped containers
	  stats       Display a live stream of container(s) resource usage statistics
	  stop        Stop one or more running containers
	  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
	  top         Display the running processes of a container
	  unpause     Unpause all processes within one or more containers
	  update      Update configuration of one or more containers
	  wait        Block until one or more containers stop, then print their exit codes

	Global Options:
		  --config string      Location of client config files (default
							   "/home/docker/.docker")
	  -c, --context string     Name of the context to use to connect to the
							   daemon (overrides DOCKER_HOST env var and
							   default context set with "docker context use")
	  -D, --debug              Enable debug mode
	  -H, --host list          Daemon socket to connect to
	  -l, --log-level string   Set the logging level ("debug", "info",
							   "warn", "error", "fatal") (default "info")
		  --tls                Use TLS; implied by --tlsverify
		  --tlscacert string   Trust certs signed only by this CA (default
							   "/home/docker/.docker/ca.pem")
		  --tlscert string     Path to TLS certificate file (default
							   "/home/docker/.docker/cert.pem")
		  --tlskey string      Path to TLS key file (default
							   "/home/docker/.docker/key.pem")
		  --tlsverify          Use TLS and verify the remote
	  -v, --version            Print version information and quit

	Run 'docker COMMAND --help' for more information on a command.
	
Sequences:
----------
docker context use default
minikube start --driver=docker
minikube status
kubectl get pods --namespace default
kubectl create deployment redis-deployment --image=redis
kubectl get deployments
kubectl describe deployment redis-deployment
kubectl describe pod redis-deployment-69f444496d-bxnn5
k scale deployment redis-deployment --replicas=3
k get pods
k get pods -o wide
m ip
m ssh
    docker ps | grep redis | grep -v pause
    curl [ip of the pod show by the get pods -o wide]
k get deploy
k expose deployment nginx-deployment --port=[externalport like 8080] --target-port=[internal port like 80]
    (created the service)
k get services 
    (shows the cluster created for the deployment which has multiple scaled pods e.g. one ip for the cluster of pods)
m ssh
    curl [clusterip shown in prev command eg 10.100.134.105]:[external port eg 8080]
k describe service nginx-deployment
k delete deployment nginx-deployment
k delete service nginx-deployment
k get svc
k get deploy











deployments (exposed by the service)
    pods
        containers




